// <auto-generated />
using System;
using ExcelFilter.Api.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExcelFilter.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ExcelFilter.Api.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "City 2"
                        },
                        new
                        {
                            Id = 2,
                            Name = "City 1"
                        });
                });

            modelBuilder.Entity("ExcelFilter.Api.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            CreatedAt = new DateTime(2022, 10, 15, 23, 6, 16, 648, DateTimeKind.Local).AddTicks(1942),
                            Price = 100.1m
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            CreatedAt = new DateTime(2023, 11, 16, 23, 6, 16, 648, DateTimeKind.Local).AddTicks(1954),
                            Name = "Order 2",
                            Price = 20.25m
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 9, 14, 23, 6, 16, 648, DateTimeKind.Local).AddTicks(1961),
                            Name = "Order 3",
                            Price = 50m
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 9, 14, 23, 6, 16, 648, DateTimeKind.Local).AddTicks(1964),
                            Price = 10m
                        },
                        new
                        {
                            Id = 5,
                            CityId = 1,
                            CreatedAt = new DateTime(2022, 9, 14, 23, 6, 16, 648, DateTimeKind.Local).AddTicks(1965),
                            Name = "Order 1",
                            Price = 15m
                        });
                });

            modelBuilder.Entity("ExcelFilter.Api.Entities.Order", b =>
                {
                    b.HasOne("ExcelFilter.Api.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });
#pragma warning restore 612, 618
        }
    }
}
